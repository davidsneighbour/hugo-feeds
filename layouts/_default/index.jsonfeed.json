{{- /*

- TODO add limits setup
- TODO add hooks
- TODO remove drafts
- TODO make drafts configurable
- TODO add feed level fields:
        - "title"
        - description
        - user_comment (what is this feed for)
        - next_url
        - icon 512/512
        - favicon 64/64
        - authors
            - name
            - "url"
            - avatar 512x512
        - expired (optional, boolean) says whether or not the feed is finished — that is, whether or not it will ever update again. A feed for a temporary event, such as an instance of the Olympics, could expire. If the value is true, then it’s expired. Any other value, or the absence of expired, means the feed may continue to update.
- TODO add item level fields:
        - external_url (very optional, string) is the URL of a page elsewhere. This is especially useful for linkblogs. If url links to where you’re talking about a thing, then external_url links to the thing you’re talking about.
        - summary (optional, string) is a plain text sentence or two describing the item. This might be presented in a timeline, for instance, where a detail view would display all of content_html or content_text.
        - image (optional, string) is the URL of the main image for the item. This image may also appear in the content_html — if so, it’s a hint to the feed reader that this is the main, featured image. Feed readers may use the image as a preview (probably resized as a thumbnail and placed in a timeline).
        - banner_image (optional, string) is the URL of an image to use as a banner. Some blogging systems (such as Medium) display a different banner image chosen to go with each post, but that image wouldn’t otherwise appear in the content_html. A feed reader with a detail view may choose to show this banner image at the top of the detail view, possibly with the title overlaid.
        - authors
        - tags (optional, array of strings) can have any plain text values you want. Tags tend to be just one word, but they may be anything. Note: they are not the equivalent of Twitter hashtags. Some blogging systems and other feed formats call these categories.
        - language (optional, string) is the language for this item, using the same format as the top-level language field. The value can be different than the primary language for the feed when a specific item is written in a different language than other items in the feed.

        - attachments (optional, array) lists related resources. Podcasts, for instance, would include an attachment that’s an audio or video file. Each attachment has several members:

          url (required, string) specifies the location of the attachment.

          mime_type (required, string) specifies the type of the attachment, such as “audio/mpeg.”

          title (optional, string) is a name for the attachment. Important: if there are multiple attachments, and two or more have the exact same title (when title is present), then they are considered as alternate representations of the same thing. In this way a podcaster, for instance, might provide an audio recording in different formats.

          size_in_bytes (optional, number) specifies how large the file is.

          duration_in_seconds (optional, number) specifies how long it takes to listen to or watch, when played at normal speed.


*/ -}}

{{- $pctx := . -}}
{{- if .IsHome -}}{{- $pctx = .Site -}}{{- end -}}
{{- $pages := $pctx.RegularPages -}}
{{- $limit := partialCached "dnb-feeds/getLimit.html" "json" . -}}
{{- $pages = $pages | first $limit -}}

{{- $feed := dict "version" "https://jsonfeed.org/version/1.1" -}}
{{- $feed = merge $feed ( dict "home_page_url" .Site.BaseURL ) -}}

{{- with .OutputFormats.Get "jsonfeed" -}}
  {{- $feed = merge $feed ( dict "feed_url" .Permalink ) -}}
{{- end -}}

{{- $feed = merge $feed ( dict "_generator" ( printf "GoHugo %s (%s/%s)" .Hugo.Version .Hugo.CommitHash .Hugo.BuildDate )) -}}

{{- with .Site.LanguageCode -}}
  {{- $feed = merge $feed ( dict "language" . ) -}}
{{- end -}}
{{- with $.Param "icon" -}}
  {{- $feed = merge $feed ( dict "icon" ( . | absURL ) ) -}}
{{- end -}}
{{- with $.Param "favicon" -}}
  {{- $feed = merge $feed ( dict "favicon" ( . | absURL ) ) -}}
{{- end -}}

{{- $items := slice -}}
{{- range $index, $element := $pages -}}
  {{- /* content_text */ -}}
  {{- $items = $items | append (dict
        "title" .Title
        "date_published" ( .Date.Format "2006-01-02T15:04:05Z07:00" )
        "date_modified" ( .Lastmod.Format "2006-01-02T15:04:05Z07:00" )
        "id" .File.UniqueID
        "url" .Permalink
        "content_html" .Content
  ) -}}
{{- end -}}
{{- $feed = merge $feed ( dict "items" $items ) -}}

{{- $feed | jsonify -}}
